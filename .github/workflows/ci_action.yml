name: CI Action

on:
  push:
      branches: 
        - '**'
        - '!master'
      tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
      branches:
        - '**'
jobs:
  build:
      name: Build Job
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [macos-latest, ubuntu-latest, windows-latest]
          include:
            - os: macos-latest
              SHELL: bash
              SEP: /
              LS_CMD: ls -la
            - os: ubuntu-latest
              SHELL: bash
              SEP: /
              LS_CMD: ls -la
            - os: windows-latest
              SHELL: cmd
              SEP: \
              LS_CMD: dir /a
      defaults:
        run:
          shell: ${{ matrix.SHELL }}
      env:
        BUILD_DIR: ${{ github.workspace }}${{ matrix.SEP }}build
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: List Workspace
          run:  ${{matrix.LS_CMD}} ${{ github.workspace }}
        - name: Compile
          run: |
            echo "== CMAKE VERSION =="
            cmake --version
            echo "== CMAKE CONFIGURE =="
            cmake -B${{env.BUILD_DIR}} -DGITHUB_ACTION=1
            echo "== CMAKE BUILD =="
            cmake --build ${{env.BUILD_DIR}} --config Release
        - name: List Build
          run:  ${{matrix.LS_CMD}} ${{env.BUILD_DIR}}
        - name: Test
          run: |
            cd ${{env.BUILD_DIR}}
            ctest -C Release -T test --output-on-failure
            cd ${{ github.workspace }}
  release:
    name: Create Github Release
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./clove-unit.h
          asset_name: clove-unit.h
          asset_content_type: text/plain